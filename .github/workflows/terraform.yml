name: "Vprofile IAC"
on:
  push:
    branches:
      - '**'
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
 
env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the Terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-2
  EKS_CLUSTER: vprofile-eks
 
jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      # Previous steps remain unchanged...

      # Terraform Apply step
      - name: Terraform Apply 
        id: Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      # Configure AWS credentials step
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ env.AWS_REGION }}

      # Get Kube config file step
      - name: Get Kube config file
        id: getconfig
        if: steps.Apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      # Install Ingress controller step
      - name: Install Ingress controller
        if: steps.Apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml

      # Terraform Destroy step
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.Apply.outcome == 'success'
        run: terraform destroy -auto-approve
